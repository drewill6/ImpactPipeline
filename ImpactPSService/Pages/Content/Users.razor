@page "/users"
@using DataImpact.Interfaces;
@using DataImpact.Models;
@inject IUserService UserService
@inject IJSRuntime JSRuntime

<h3>Users</h3>

<table class="table">
    <thead>
        <tr>
            <th>Username</th>
            <th>Email</th>
            <th>FirstName</th>
            <th>LastName</th>
            <!-- Add more fields here as needed -->
        </tr>
    </thead>
    <tbody>
        @if (users == null)
        {
            <tr>
                <td colspan="4">Loading...</td>
            </tr>
        }
        else if (users.Count == 0)
        {
            <tr>
                <td colspan="4">No users found.</td>
            </tr>
        }
        else
        {
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.UserName</td>
                    <td>@user.Email</td>
                    <td>@user.FirstName</td>
                    <td>@user.LastName</td>
                    <!-- Add more fields here as needed -->
                </tr>
            }
        }
    </tbody>
</table>

@code {
    private List<User>? users;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Retrieve users from the backend service
            users = await UserService.GetUsersAsync();
        }
        catch (Exception ex)
        {
            // Handle errors gracefully
            Console.WriteLine(ex.Message);
            await JSRuntime.InvokeVoidAsync("alert", "Error occurred while fetching users.");
        }
    }
}